<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:property-placeholder location="classpath:/example.jdbc.properties" order="1" system-properties-mode="OVERRIDE" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="exampleDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${example.jdbc.driverClassName}" />
		<property name="url" value="${example.jdbc.url}" />
		<property name="username" value="${example.jdbc.username}" />
		<property name="password" value="${example.jdbc.password}" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:./persistence.xml"/>
		<property name="dataSource" ref="exampleDataSource" />
		<property name="persistenceUnitName" value="ExamplePU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="${HibernateJpaVendorAdapter.database}" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT" />
		<property name="dataSource" ref="exampleDataSource" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="jobExplorer" class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="exampleDataSource" />
	</bean>

	<bean id="syncTaskExecutor" class="org.springframework.core.task.SyncTaskExecutor" />

	<bean id="jobOperator" class="org.springframework.batch.core.launch.support.SimpleJobOperator">
		<property name="jobExplorer" ref="jobExplorer" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="jobRegistry" ref="jobRegistry" />
		<property name="jobLauncher" ref="jobLauncher" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<context:component-scan base-package="com.example.springbatch.dao" />
	
	<!-- Job Level -->
	<bean id="exampleReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['file']}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,name" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="exampleFileMapper" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="exampleProcessor" class="com.itservicesdepot.example.springbatch.processor.ExampleProcessor" scope="step"/>
	<bean id="exampleWriter" class="com.itservicesdepot.example.springbatch.writer.ExampleWriter" scope="step">
		<property name="importTrackingId" value="#{jobExecutionContext['importTrackingId']}"></property>
	</bean>
	<bean id="exampleJobListener" class="com.itservicesdepot.example.springbatch.listener.ExampleJobListener"/>
	<bean id="exampleFileMapper" class="com.itservicesdepot.example.springbatch.model.SoccerPlayerEntry" scope="prototype"/>
		
	<bean id="soccerPlayerDao" class="com.itservicesdepot.example.springbatch.dao.SoccerPlayerDaoImpl">
	</bean>	
</beans>